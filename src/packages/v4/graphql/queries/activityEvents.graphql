query ActivityEvents(
  $where: activityEventFilter
  $orderBy: String
  $orderDirection: String
  $limit: Int
  $after: String
) {
  activityEvents(
    where: $where
    orderBy: $orderBy
    orderDirection: $orderDirection
    limit: $limit
    after: $after
  ) {
    pageInfo {
      hasNextPage
      endCursor
    }
    items {
      id
      chainId
      timestamp
      payEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        amount
        memo
        distributionFromProjectId
        beneficiary
        feeFromProject
        newlyIssuedTokenCount
      }
      addToBalanceEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        amount
        memo
      }
      mintTokensEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        tokenCount
        beneficiary
        memo
      }
      cashOutTokensEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        metadata
        holder
        beneficiary
        cashOutCount
        reclaimAmount
      }
      deployErc20Event {
        id
        projectId
        timestamp
        txHash
        from
        caller
        symbol
        token
      }
      projectCreateEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
      }
      sendPayoutsEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        amount
        amountPaidOut
        amountPaidOutUsd
        rulesetCycleNumber
        rulesetId
        fee
        feeUsd
      }
      sendReservedTokensToSplitsEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        rulesetCycleNumber
        tokenCount
      }
      sendReservedTokensToSplitEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        tokenCount
        preferAddToBalance
        percent
        splitProjectId
        beneficiary
        lockedUntil
      }
      sendPayoutToSplitEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        amount
        preferAddToBalance
        percent
        splitProjectId
        beneficiary
        lockedUntil
      }
      useAllowanceEvent {
        id
        projectId
        timestamp
        txHash
        from
        caller
        rulesetId
        rulesetCycleNumber
        beneficiary
        amount
        amountPaidOut
        netAmountPaidOut
        memo
      }
      burnEvent {
        id
        projectId
        timestamp
        txHash
        from
        amount
        creditAmount
        erc20Amount
      }
    }
  }
}
