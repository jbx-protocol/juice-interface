fragment ProjectFields on Project {
  projectId
  metadataUri
  handle
  contributorsCount
  createdAt
  volume
  trendingVolume
  paymentsCount
}

query ProjectEvents(
  $where: ProjectEvent_filter
  $orderBy: ProjectEvent_orderBy
  $orderDirection: OrderDirection
  $first: Int
  $skip: Int
  $block: Block_height
) {
  projectEvents(
    where: $where
    orderBy: $orderBy
    orderDirection: $orderDirection
    first: $first
    skip: $skip
    block: $block
  ) {
    id
    project {
      ...ProjectFields
    }
    payEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      amount
      amountUSD
      note
      distributionFromProjectId
      beneficiary
      feeFromProject
      beneficiaryTokenCount
    }
    addToBalanceEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      amount
      amountUSD
      note
    }
    mintTokensEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      amount
      beneficiary
      memo
    }
    cashOutEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      metadata
      holder
      beneficiary
      cashOutCount
      reclaimAmount
      reclaimAmountUSD
    }
    deployedERC20Event {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      symbol
      address
    }
    projectCreateEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
    }
    distributePayoutsEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      amount
      amountUSD
      amountPaidOut
      amountPaidOutUSD
      rulesetCycleNumber
      rulesetId
      fee
      feeUSD
    }
    distributeReservedTokensEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      rulesetCycleNumber
      tokenCount
    }
    distributeToReservedTokenSplitEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      tokenCount
      preferAddToBalance
      percent
      splitProjectId
      beneficiary
      lockedUntil
    }
    distributeToPayoutSplitEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      amount
      amountUSD
      preferAddToBalance
      percent
      splitProjectId
      beneficiary
      lockedUntil
    }
    useAllowanceEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      rulesetId
      rulesetCycleNumber
      beneficiary
      amount
      amountUSD
      distributedAmount
      distributedAmountUSD
      netDistributedamount
      netDistributedamountUSD
      memo
    }
    burnEvent {
      id
      project {
        ...ProjectFields
      }
      projectId
      timestamp
      txHash
      from
      caller
      holder
      amount
      stakedAmount
      erc20Amount
    }
  }
}
