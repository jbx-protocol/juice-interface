// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptGovernance extends ethereum.Event {
  get params(): AcceptGovernance__Params {
    return new AcceptGovernance__Params(this);
  }
}

export class AcceptGovernance__Params {
  _event: AcceptGovernance;

  constructor(event: AcceptGovernance) {
    this._event = event;
  }

  get governance(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AddToBalance extends ethereum.Event {
  get params(): AddToBalance__Params {
    return new AddToBalance__Params(this);
  }
}

export class AddToBalance__Params {
  _event: AddToBalance;

  constructor(event: AddToBalance) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AllowMigration extends ethereum.Event {
  get params(): AllowMigration__Params {
    return new AllowMigration__Params(this);
  }
}

export class AllowMigration__Params {
  _event: AllowMigration;

  constructor(event: AllowMigration) {
    this._event = event;
  }

  get allowed(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AppointGovernance extends ethereum.Event {
  get params(): AppointGovernance__Params {
    return new AppointGovernance__Params(this);
  }
}

export class AppointGovernance__Params {
  _event: AppointGovernance;

  constructor(event: AppointGovernance) {
    this._event = event;
  }

  get governance(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Configure extends ethereum.Event {
  get params(): Configure__Params {
    return new Configure__Params(this);
  }
}

export class Configure__Params {
  _event: Configure;

  constructor(event: Configure) {
    this._event = event;
  }

  get fundingCycleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get projectId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DistributeToPayoutMod extends ethereum.Event {
  get params(): DistributeToPayoutMod__Params {
    return new DistributeToPayoutMod__Params(this);
  }
}

export class DistributeToPayoutMod__Params {
  _event: DistributeToPayoutMod;

  constructor(event: DistributeToPayoutMod) {
    this._event = event;
  }

  get fundingCycleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get projectId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mod(): DistributeToPayoutModModStruct {
    return this._event.parameters[2].value.toTuple() as DistributeToPayoutModModStruct;
  }

  get modCut(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class DistributeToPayoutModModStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }

  get allocator(): Address {
    return this[4].toAddress();
  }

  get projectId(): BigInt {
    return this[5].toBigInt();
  }
}

export class DistributeToTicketMod extends ethereum.Event {
  get params(): DistributeToTicketMod__Params {
    return new DistributeToTicketMod__Params(this);
  }
}

export class DistributeToTicketMod__Params {
  _event: DistributeToTicketMod;

  constructor(event: DistributeToTicketMod) {
    this._event = event;
  }

  get fundingCycleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get projectId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mod(): DistributeToTicketModModStruct {
    return this._event.parameters[2].value.toTuple() as DistributeToTicketModModStruct;
  }

  get modCut(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class DistributeToTicketModModStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }
}

export class EnsureTargetLocalWei extends ethereum.Event {
  get params(): EnsureTargetLocalWei__Params {
    return new EnsureTargetLocalWei__Params(this);
  }
}

export class EnsureTargetLocalWei__Params {
  _event: EnsureTargetLocalWei;

  constructor(event: EnsureTargetLocalWei) {
    this._event = event;
  }

  get target(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Migrate extends ethereum.Event {
  get params(): Migrate__Params {
    return new Migrate__Params(this);
  }
}

export class Migrate__Params {
  _event: Migrate;

  constructor(event: Migrate) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Pay extends ethereum.Event {
  get params(): Pay__Params {
    return new Pay__Params(this);
  }
}

export class Pay__Params {
  _event: Pay;

  constructor(event: Pay) {
    this._event = event;
  }

  get fundingCycleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get projectId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get note(): string {
    return this._event.parameters[4].value.toString();
  }

  get caller(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class PrintPreminedTickets extends ethereum.Event {
  get params(): PrintPreminedTickets__Params {
    return new PrintPreminedTickets__Params(this);
  }
}

export class PrintPreminedTickets__Params {
  _event: PrintPreminedTickets;

  constructor(event: PrintPreminedTickets) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get currency(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get memo(): string {
    return this._event.parameters[4].value.toString();
  }

  get caller(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class PrintReserveTickets extends ethereum.Event {
  get params(): PrintReserveTickets__Params {
    return new PrintReserveTickets__Params(this);
  }
}

export class PrintReserveTickets__Params {
  _event: PrintReserveTickets;

  constructor(event: PrintReserveTickets) {
    this._event = event;
  }

  get fundingCycleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get projectId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get count(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get beneficiaryTicketAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get holder(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _projectId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get returnAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class SetFee extends ethereum.Event {
  get params(): SetFee__Params {
    return new SetFee__Params(this);
  }
}

export class SetFee__Params {
  _event: SetFee;

  constructor(event: SetFee) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetTargetLocalWei extends ethereum.Event {
  get params(): SetTargetLocalWei__Params {
    return new SetTargetLocalWei__Params(this);
  }
}

export class SetTargetLocalWei__Params {
  _event: SetTargetLocalWei;

  constructor(event: SetTargetLocalWei) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetYielder extends ethereum.Event {
  get params(): SetYielder__Params {
    return new SetYielder__Params(this);
  }
}

export class SetYielder__Params {
  _event: SetYielder;

  constructor(event: SetYielder) {
    this._event = event;
  }

  get newYielder(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Tap extends ethereum.Event {
  get params(): Tap__Params {
    return new Tap__Params(this);
  }
}

export class Tap__Params {
  _event: Tap;

  constructor(event: Tap) {
    this._event = event;
  }

  get fundingCycleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get projectId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get currency(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get netTransferAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get beneficiaryTransferAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get govFeeAmount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class TerminalV1__configureInput_propertiesStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): BigInt {
    return this[1].toBigInt();
  }

  get duration(): BigInt {
    return this[2].toBigInt();
  }

  get cycleLimit(): BigInt {
    return this[3].toBigInt();
  }

  get discountRate(): BigInt {
    return this[4].toBigInt();
  }

  get ballot(): Address {
    return this[5].toAddress();
  }
}

export class TerminalV1__configureInput_metadataStruct extends ethereum.Tuple {
  get reservedRate(): BigInt {
    return this[0].toBigInt();
  }

  get bondingCurveRate(): BigInt {
    return this[1].toBigInt();
  }

  get reconfigurationBondingCurveRate(): BigInt {
    return this[2].toBigInt();
  }
}

export class TerminalV1__configureInput_payoutModsStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }

  get allocator(): Address {
    return this[4].toAddress();
  }

  get projectId(): BigInt {
    return this[5].toBigInt();
  }
}

export class TerminalV1__configureInput_ticketModsStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }
}

export class TerminalV1 extends ethereum.SmartContract {
  static bind(address: Address): TerminalV1 {
    return new TerminalV1("TerminalV1", address);
  }

  balanceOf(param0: BigInt): BigInt {
    let result = super.call("balanceOf", "balanceOf(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canPrintPreminedTickets(_projectId: BigInt): boolean {
    let result = super.call(
      "canPrintPreminedTickets",
      "canPrintPreminedTickets(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBoolean();
  }

  try_canPrintPreminedTickets(
    _projectId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canPrintPreminedTickets",
      "canPrintPreminedTickets(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  claimableOverflowOf(
    _account: Address,
    _projectId: BigInt,
    _count: BigInt
  ): BigInt {
    let result = super.call(
      "claimableOverflowOf",
      "claimableOverflowOf(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_count)
      ]
    );

    return result[0].toBigInt();
  }

  try_claimableOverflowOf(
    _account: Address,
    _projectId: BigInt,
    _count: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimableOverflowOf",
      "claimableOverflowOf(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_count)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  configure(
    _projectId: BigInt,
    _properties: TerminalV1__configureInput_propertiesStruct,
    _metadata: TerminalV1__configureInput_metadataStruct,
    _payoutMods: Array<TerminalV1__configureInput_payoutModsStruct>,
    _ticketMods: Array<TerminalV1__configureInput_ticketModsStruct>
  ): BigInt {
    let result = super.call(
      "configure",
      "configure(uint256,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256),(bool,uint16,uint48,address,address,uint56)[],(bool,uint16,uint48,address)[]):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromTuple(_properties),
        ethereum.Value.fromTuple(_metadata),
        ethereum.Value.fromTupleArray(_payoutMods),
        ethereum.Value.fromTupleArray(_ticketMods)
      ]
    );

    return result[0].toBigInt();
  }

  try_configure(
    _projectId: BigInt,
    _properties: TerminalV1__configureInput_propertiesStruct,
    _metadata: TerminalV1__configureInput_metadataStruct,
    _payoutMods: Array<TerminalV1__configureInput_payoutModsStruct>,
    _ticketMods: Array<TerminalV1__configureInput_ticketModsStruct>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "configure",
      "configure(uint256,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256),(bool,uint16,uint48,address,address,uint56)[],(bool,uint16,uint48,address)[]):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromTuple(_properties),
        ethereum.Value.fromTuple(_metadata),
        ethereum.Value.fromTupleArray(_payoutMods),
        ethereum.Value.fromTupleArray(_ticketMods)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentOverflowOf(_projectId: BigInt): BigInt {
    let result = super.call(
      "currentOverflowOf",
      "currentOverflowOf(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_currentOverflowOf(_projectId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentOverflowOf",
      "currentOverflowOf(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundingCycles(): Address {
    let result = super.call("fundingCycles", "fundingCycles():(address)", []);

    return result[0].toAddress();
  }

  try_fundingCycles(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fundingCycles",
      "fundingCycles():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  migrationIsAllowed(param0: Address): boolean {
    let result = super.call(
      "migrationIsAllowed",
      "migrationIsAllowed(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_migrationIsAllowed(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "migrationIsAllowed",
      "migrationIsAllowed(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  modStore(): Address {
    let result = super.call("modStore", "modStore():(address)", []);

    return result[0].toAddress();
  }

  try_modStore(): ethereum.CallResult<Address> {
    let result = super.tryCall("modStore", "modStore():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operatorStore(): Address {
    let result = super.call("operatorStore", "operatorStore():(address)", []);

    return result[0].toAddress();
  }

  try_operatorStore(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "operatorStore",
      "operatorStore():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingGovernance(): Address {
    let result = super.call(
      "pendingGovernance",
      "pendingGovernance():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pendingGovernance(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingGovernance",
      "pendingGovernance():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  prices(): Address {
    let result = super.call("prices", "prices():(address)", []);

    return result[0].toAddress();
  }

  try_prices(): ethereum.CallResult<Address> {
    let result = super.tryCall("prices", "prices():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  printReservedTickets(_projectId: BigInt): BigInt {
    let result = super.call(
      "printReservedTickets",
      "printReservedTickets(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_printReservedTickets(_projectId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "printReservedTickets",
      "printReservedTickets(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projects(): Address {
    let result = super.call("projects", "projects():(address)", []);

    return result[0].toAddress();
  }

  try_projects(): ethereum.CallResult<Address> {
    let result = super.tryCall("projects", "projects():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  redeem(
    _account: Address,
    _projectId: BigInt,
    _count: BigInt,
    _minReturnedWei: BigInt,
    _beneficiary: Address,
    _preferUnstaked: boolean
  ): BigInt {
    let result = super.call(
      "redeem",
      "redeem(address,uint256,uint256,uint256,address,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_count),
        ethereum.Value.fromUnsignedBigInt(_minReturnedWei),
        ethereum.Value.fromAddress(_beneficiary),
        ethereum.Value.fromBoolean(_preferUnstaked)
      ]
    );

    return result[0].toBigInt();
  }

  try_redeem(
    _account: Address,
    _projectId: BigInt,
    _count: BigInt,
    _minReturnedWei: BigInt,
    _beneficiary: Address,
    _preferUnstaked: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redeem",
      "redeem(address,uint256,uint256,uint256,address,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_count),
        ethereum.Value.fromUnsignedBigInt(_minReturnedWei),
        ethereum.Value.fromAddress(_beneficiary),
        ethereum.Value.fromBoolean(_preferUnstaked)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reservedTicketBalanceOf(_projectId: BigInt, _reservedRate: BigInt): BigInt {
    let result = super.call(
      "reservedTicketBalanceOf",
      "reservedTicketBalanceOf(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_reservedRate)
      ]
    );

    return result[0].toBigInt();
  }

  try_reservedTicketBalanceOf(
    _projectId: BigInt,
    _reservedRate: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reservedTicketBalanceOf",
      "reservedTicketBalanceOf(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_reservedRate)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tap(
    _projectId: BigInt,
    _amount: BigInt,
    _currency: BigInt,
    _minReturnedWei: BigInt
  ): BigInt {
    let result = super.call(
      "tap",
      "tap(uint256,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_currency),
        ethereum.Value.fromUnsignedBigInt(_minReturnedWei)
      ]
    );

    return result[0].toBigInt();
  }

  try_tap(
    _projectId: BigInt,
    _amount: BigInt,
    _currency: BigInt,
    _minReturnedWei: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tap",
      "tap(uint256,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_currency),
        ethereum.Value.fromUnsignedBigInt(_minReturnedWei)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  terminalDirectory(): Address {
    let result = super.call(
      "terminalDirectory",
      "terminalDirectory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_terminalDirectory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "terminalDirectory",
      "terminalDirectory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ticketBooth(): Address {
    let result = super.call("ticketBooth", "ticketBooth():(address)", []);

    return result[0].toAddress();
  }

  try_ticketBooth(): ethereum.CallResult<Address> {
    let result = super.tryCall("ticketBooth", "ticketBooth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _projects(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fundingCycles(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _ticketBooth(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _operatorStore(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _modStore(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _prices(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _terminalDirectory(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _governance(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptGovernanceCall extends ethereum.Call {
  get inputs(): AcceptGovernanceCall__Inputs {
    return new AcceptGovernanceCall__Inputs(this);
  }

  get outputs(): AcceptGovernanceCall__Outputs {
    return new AcceptGovernanceCall__Outputs(this);
  }
}

export class AcceptGovernanceCall__Inputs {
  _call: AcceptGovernanceCall;

  constructor(call: AcceptGovernanceCall) {
    this._call = call;
  }
}

export class AcceptGovernanceCall__Outputs {
  _call: AcceptGovernanceCall;

  constructor(call: AcceptGovernanceCall) {
    this._call = call;
  }
}

export class AddToBalanceCall extends ethereum.Call {
  get inputs(): AddToBalanceCall__Inputs {
    return new AddToBalanceCall__Inputs(this);
  }

  get outputs(): AddToBalanceCall__Outputs {
    return new AddToBalanceCall__Outputs(this);
  }
}

export class AddToBalanceCall__Inputs {
  _call: AddToBalanceCall;

  constructor(call: AddToBalanceCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddToBalanceCall__Outputs {
  _call: AddToBalanceCall;

  constructor(call: AddToBalanceCall) {
    this._call = call;
  }
}

export class AllowMigrationCall extends ethereum.Call {
  get inputs(): AllowMigrationCall__Inputs {
    return new AllowMigrationCall__Inputs(this);
  }

  get outputs(): AllowMigrationCall__Outputs {
    return new AllowMigrationCall__Outputs(this);
  }
}

export class AllowMigrationCall__Inputs {
  _call: AllowMigrationCall;

  constructor(call: AllowMigrationCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AllowMigrationCall__Outputs {
  _call: AllowMigrationCall;

  constructor(call: AllowMigrationCall) {
    this._call = call;
  }
}

export class AppointGovernanceCall extends ethereum.Call {
  get inputs(): AppointGovernanceCall__Inputs {
    return new AppointGovernanceCall__Inputs(this);
  }

  get outputs(): AppointGovernanceCall__Outputs {
    return new AppointGovernanceCall__Outputs(this);
  }
}

export class AppointGovernanceCall__Inputs {
  _call: AppointGovernanceCall;

  constructor(call: AppointGovernanceCall) {
    this._call = call;
  }

  get _pendingGovernance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AppointGovernanceCall__Outputs {
  _call: AppointGovernanceCall;

  constructor(call: AppointGovernanceCall) {
    this._call = call;
  }
}

export class ConfigureCall extends ethereum.Call {
  get inputs(): ConfigureCall__Inputs {
    return new ConfigureCall__Inputs(this);
  }

  get outputs(): ConfigureCall__Outputs {
    return new ConfigureCall__Outputs(this);
  }
}

export class ConfigureCall__Inputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _properties(): ConfigureCall_propertiesStruct {
    return this._call.inputValues[1].value.toTuple() as ConfigureCall_propertiesStruct;
  }

  get _metadata(): ConfigureCall_metadataStruct {
    return this._call.inputValues[2].value.toTuple() as ConfigureCall_metadataStruct;
  }

  get _payoutMods(): Array<ConfigureCall_payoutModsStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      ConfigureCall_payoutModsStruct
    >();
  }

  get _ticketMods(): Array<ConfigureCall_ticketModsStruct> {
    return this._call.inputValues[4].value.toTupleArray<
      ConfigureCall_ticketModsStruct
    >();
  }
}

export class ConfigureCall__Outputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ConfigureCall_propertiesStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): BigInt {
    return this[1].toBigInt();
  }

  get duration(): BigInt {
    return this[2].toBigInt();
  }

  get cycleLimit(): BigInt {
    return this[3].toBigInt();
  }

  get discountRate(): BigInt {
    return this[4].toBigInt();
  }

  get ballot(): Address {
    return this[5].toAddress();
  }
}

export class ConfigureCall_metadataStruct extends ethereum.Tuple {
  get reservedRate(): BigInt {
    return this[0].toBigInt();
  }

  get bondingCurveRate(): BigInt {
    return this[1].toBigInt();
  }

  get reconfigurationBondingCurveRate(): BigInt {
    return this[2].toBigInt();
  }
}

export class ConfigureCall_payoutModsStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }

  get allocator(): Address {
    return this[4].toAddress();
  }

  get projectId(): BigInt {
    return this[5].toBigInt();
  }
}

export class ConfigureCall_ticketModsStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _handle(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _uri(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _properties(): DeployCall_propertiesStruct {
    return this._call.inputValues[3].value.toTuple() as DeployCall_propertiesStruct;
  }

  get _metadata(): DeployCall_metadataStruct {
    return this._call.inputValues[4].value.toTuple() as DeployCall_metadataStruct;
  }

  get _payoutMods(): Array<DeployCall_payoutModsStruct> {
    return this._call.inputValues[5].value.toTupleArray<
      DeployCall_payoutModsStruct
    >();
  }

  get _ticketMods(): Array<DeployCall_ticketModsStruct> {
    return this._call.inputValues[6].value.toTupleArray<
      DeployCall_ticketModsStruct
    >();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }
}

export class DeployCall_propertiesStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): BigInt {
    return this[1].toBigInt();
  }

  get duration(): BigInt {
    return this[2].toBigInt();
  }

  get cycleLimit(): BigInt {
    return this[3].toBigInt();
  }

  get discountRate(): BigInt {
    return this[4].toBigInt();
  }

  get ballot(): Address {
    return this[5].toAddress();
  }
}

export class DeployCall_metadataStruct extends ethereum.Tuple {
  get reservedRate(): BigInt {
    return this[0].toBigInt();
  }

  get bondingCurveRate(): BigInt {
    return this[1].toBigInt();
  }

  get reconfigurationBondingCurveRate(): BigInt {
    return this[2].toBigInt();
  }
}

export class DeployCall_payoutModsStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }

  get allocator(): Address {
    return this[4].toAddress();
  }

  get projectId(): BigInt {
    return this[5].toBigInt();
  }
}

export class DeployCall_ticketModsStruct extends ethereum.Tuple {
  get preferUnstaked(): boolean {
    return this[0].toBoolean();
  }

  get percent(): i32 {
    return this[1].toI32();
  }

  get lockedUntil(): BigInt {
    return this[2].toBigInt();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }
}

export class MigrateCall extends ethereum.Call {
  get inputs(): MigrateCall__Inputs {
    return new MigrateCall__Inputs(this);
  }

  get outputs(): MigrateCall__Outputs {
    return new MigrateCall__Outputs(this);
  }
}

export class MigrateCall__Inputs {
  _call: MigrateCall;

  constructor(call: MigrateCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MigrateCall__Outputs {
  _call: MigrateCall;

  constructor(call: MigrateCall) {
    this._call = call;
  }
}

export class PayCall extends ethereum.Call {
  get inputs(): PayCall__Inputs {
    return new PayCall__Inputs(this);
  }

  get outputs(): PayCall__Outputs {
    return new PayCall__Outputs(this);
  }
}

export class PayCall__Inputs {
  _call: PayCall;

  constructor(call: PayCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _memo(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _preferUnstakedTickets(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class PayCall__Outputs {
  _call: PayCall;

  constructor(call: PayCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PrintPreminedTicketsCall extends ethereum.Call {
  get inputs(): PrintPreminedTicketsCall__Inputs {
    return new PrintPreminedTicketsCall__Inputs(this);
  }

  get outputs(): PrintPreminedTicketsCall__Outputs {
    return new PrintPreminedTicketsCall__Outputs(this);
  }
}

export class PrintPreminedTicketsCall__Inputs {
  _call: PrintPreminedTicketsCall;

  constructor(call: PrintPreminedTicketsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currency(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _memo(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _preferUnstakedTickets(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class PrintPreminedTicketsCall__Outputs {
  _call: PrintPreminedTicketsCall;

  constructor(call: PrintPreminedTicketsCall) {
    this._call = call;
  }
}

export class PrintReservedTicketsCall extends ethereum.Call {
  get inputs(): PrintReservedTicketsCall__Inputs {
    return new PrintReservedTicketsCall__Inputs(this);
  }

  get outputs(): PrintReservedTicketsCall__Outputs {
    return new PrintReservedTicketsCall__Outputs(this);
  }
}

export class PrintReservedTicketsCall__Inputs {
  _call: PrintReservedTicketsCall;

  constructor(call: PrintReservedTicketsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PrintReservedTicketsCall__Outputs {
  _call: PrintReservedTicketsCall;

  constructor(call: PrintReservedTicketsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _projectId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _count(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minReturnedWei(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _preferUnstaked(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetFeeCall extends ethereum.Call {
  get inputs(): SetFeeCall__Inputs {
    return new SetFeeCall__Inputs(this);
  }

  get outputs(): SetFeeCall__Outputs {
    return new SetFeeCall__Outputs(this);
  }
}

export class SetFeeCall__Inputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeeCall__Outputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }
}

export class TapCall extends ethereum.Call {
  get inputs(): TapCall__Inputs {
    return new TapCall__Inputs(this);
  }

  get outputs(): TapCall__Outputs {
    return new TapCall__Outputs(this);
  }
}

export class TapCall__Inputs {
  _call: TapCall;

  constructor(call: TapCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currency(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minReturnedWei(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TapCall__Outputs {
  _call: TapCall;

  constructor(call: TapCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
